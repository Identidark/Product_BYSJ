package phase1_DatabaseView.ui;

import common.xmlUtil.DBConfigXml;
import common.xmlUtil.DBinfo2Xml;
import phase1_DatabaseView.util.DatabaseUtil;
import phase2_CodeDealView.ui.CodeView;

import javax.swing.*;
import java.io.File;
import java.sql.SQLException;
import java.util.List;
import java.util.Map;

/**
 * @program: BYSJ
 * @description: 数据库信息适配视图
 * @author: CN_ssh
 * @create: 2019-01-28 14:10
 **/

public class DatabaseView extends javax.swing.JFrame {

    Map<String, Map<String, String>> dbMap;                //数据库种类与数据库属性相关信息
    DatabaseUtil util;                                     //数据库信息
    Map<String, String> propertyMap;                       //数据库类型、驱动、url、方言、主键生成策略≈ConfigXml返回的map存储容器
    String db = "";

    //GEN-BEGIN:variables
    // Variables declaration - do not modify
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JLabel jLabel4;
    private JLabel jLabel5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables


    /**
     * Creates new form DatabaseUtils
     */
    public DatabaseView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    //GEN-BEGIN:initComponents
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jLabel1 = new JLabel();                                     //选择数据库类型
        jComboBox1 = new javax.swing.JComboBox();                   //数据库下拉框
        jLabel2 = new JLabel();                                     //用户名
        jTextField1 = new javax.swing.JTextField();                 //用户名输入框
        jLabel3 = new JLabel();                                     //密码
        jTextField2 = new javax.swing.JTextField();                 //密码输入框
        jLabel4 = new JLabel();                                     //数据库
        jComboBox2 = new javax.swing.JComboBox();                   //数据库下拉框
        jButton1 = new javax.swing.JButton();                       //测试连接
        jButton2 = new javax.swing.JButton();                       //跳过
        jTextField3 = new javax.swing.JTextField();                 //127.0.0.1
        jLabel5 = new JLabel();                                     //服务器IP

        //setTitle("\u6a21\u677f\u4ee3\u7801\u751f\u6210\u5668\u0020 v1.0");
        setTitle("模板代码生成器 v1.0      ---By Identidark");
        setBackground(new java.awt.Color(204, 255, 204));
        addWindowListener(new java.awt.event.WindowAdapter() {
            //TODO 为什么需要添加两个关闭的监听事件
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }

            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }

            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("\u9009\u62e9\u6570\u636e\u5e93\u7c7b\u578b");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(
                new String[]{"—请选择—"}));

        jLabel2.setText("\u7528\u6237\u540d");

        jLabel3.setText("\u5bc6\u7801");

        jLabel4.setText("\u6570\u636e\u5e93");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(
                new String[]{"—请选择数据库—"}));

        jButton1.setText("\u6d4b\u8bd5\u8fde\u63a5");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setLabel("\u8df3\u8fc7");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField3.setText("127.0.0.1");

        jLabel5.setText("\u670d\u52a1\u5668IP");

        //swing GUI 生成
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
                getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(
                        javax.swing.GroupLayout.Alignment.TRAILING,
                        layout.createSequentialGroup()
                                .addGap(75, 75, 75)
                                .addGroup(
                                        layout.createParallelGroup(
                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel3)
                                                .addComponent(jLabel5)
                                                .addComponent(jLabel1)
                                                .addComponent(jLabel2)
                                                .addComponent(jLabel4)
                                                .addComponent(jButton1))
                                .addGroup(
                                        layout.createParallelGroup(
                                                javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(
                                                        layout.createSequentialGroup()
                                                                .addPreferredGap(
                                                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(
                                                                        jButton2,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                        99,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(
                                                        javax.swing.GroupLayout.Alignment.LEADING,
                                                        layout.createSequentialGroup()
                                                                .addGap(34, 34,
                                                                        34)
                                                                .addGroup(
                                                                        layout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(
                                                                                        jComboBox2,
                                                                                        javax.swing.GroupLayout.Alignment.TRAILING,
                                                                                        0,
                                                                                        174,
                                                                                        Short.MAX_VALUE)
                                                                                .addComponent(
                                                                                        jTextField1,
                                                                                        javax.swing.GroupLayout.Alignment.TRAILING,
                                                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                        174,
                                                                                        Short.MAX_VALUE)
                                                                                .addComponent(
                                                                                        jComboBox1,
                                                                                        javax.swing.GroupLayout.Alignment.TRAILING,
                                                                                        0,
                                                                                        174,
                                                                                        Short.MAX_VALUE)
                                                                                .addComponent(
                                                                                        jTextField3,
                                                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                        174,
                                                                                        Short.MAX_VALUE)
                                                                                .addComponent(
                                                                                        jTextField2,
                                                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                        174,
                                                                                        Short.MAX_VALUE))))
                                .addGap(106, 106, 106)));
        layout.setVerticalGroup(layout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(
                        layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addGroup(
                                        layout.createParallelGroup(
                                                javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jLabel1)
                                                .addComponent(
                                                        jComboBox1,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(
                                        layout.createParallelGroup(
                                                javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(
                                                        jTextField3,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel5))
                                .addPreferredGap(
                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(
                                        layout.createParallelGroup(
                                                javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(
                                                        jTextField1,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel2))
                                .addPreferredGap(
                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(
                                        layout.createParallelGroup(
                                                javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(
                                                        jTextField2,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel3))
                                .addGap(11, 11, 11)
                                .addGroup(
                                        layout.createParallelGroup(
                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel4)
                                                .addComponent(
                                                        jComboBox2,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(11, 11, 11)
                                .addGroup(
                                        layout.createParallelGroup(
                                                javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jButton1)
                                                .addComponent(jButton2))
                                .addContainerGap()));

        pack();
    }// </editor-fold>
    //GEN-END:initComponents

    //窗口关闭
    private void formWindowClosing(java.awt.event.WindowEvent evt) {
        // 容器销毁，释放资源
        dispose();
        System.exit(0);
        System.out.println("释放");
    }

    //窗口关闭
    private void formWindowClosed(java.awt.event.WindowEvent evt) {
        dispose();
        System.exit(0);
        System.out.println("释放");
    }

    //窗口开启，初始化数据库类型下拉组件
    private void formWindowOpened(java.awt.event.WindowEvent evt) {
        //如果组件当前未显示或者 c 为 null，则此窗口将置于屏幕的中央。
        setLocationRelativeTo(null);
        //获取数据库种类与该数据库属性相关信息(未替换)
        dbMap = DBConfigXml.readConfig();
        //初始化数据库种类下拉列表
        for (String key : dbMap.keySet()) {
            this.jComboBox1.addItem(key);
        }

    }

    // 右侧按钮，跳过/下一步
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {


        //下一步，已测试过连接
        if (this.jButton2.getText().equals("下一步")) {
            this.jButton2.setText("运行中...");
            this.jButton2.setEnabled(false);


            try {
                //获取用户选择的数据库
                db = this.jComboBox2.getSelectedItem().toString();
                // TODO 数据库未选取情况！！！！！！！！！！！！！！！！！！！！！！！！1

            } catch (Exception e1) {
            }

            util = new DatabaseUtil();
            util.setDbName(db);//设置数据库名称
            //获取指定数据库的属性、设置种类
            util.setDbType(this.jComboBox1.getSelectedItem().toString());

            //取出数据库属性相关信息
            propertyMap = dbMap.get(util.getDbType());
            String url = propertyMap.get("url").replace("[ip]", this.jTextField3.getText());
            url = url.replace("[db]", db);


            //设置数据元信息
            util.setDriverName(propertyMap.get("driverName"));
            util.setUrl(url);
            util.setDbName(db);
            util.setIp(this.jTextField3.getText());
            util.setUserName(this.jTextField1.getText());
            util.setPassWord(this.jTextField2.getText());
            //转义字符串 "&amp；"就是'&'，处理url中携带其他条件(字符集编码)等需要使用&符号的情况
            if (url.indexOf("&amp;") < 0 && url.indexOf("&") > 0) {
                url = url.replace("&", "&amp;");
            }
            //更新该数据库url属性信息
            propertyMap.put("url", url);

            //开启线程
            final Thread t = new Thread(new Runnable() {
                public void run() {
                    try {
                        //获取当前文件夹下的模板目录下的所有文件夹      生成db结构文档所在的db目录
                        String basePath = new File("").getAbsolutePath() + File.separatorChar + "db";
                        //将数据库中所需内容进行处理然后保存到xml文件中          生成db.xml结构文档
                        DBinfo2Xml.writeDatabaseXml(util, propertyMap, basePath);
                    } catch (Exception e) {
                        e.printStackTrace();
                        JOptionPane.showMessageDialog(null, "发生错误", "错误详情请查看error.log",
                                JOptionPane.INFORMATION_MESSAGE);
                    }
                    //为下一步代码工具类进行初始化
                    CodeView codeView = new CodeView();
                    codeView.setVisible(true);
                    codeView.setDbInfo(db, jTextField1.getText(),
                            jTextField2.getText());

                    setVisible(false);

                }
            }
            );
            t.start();

        } else {
            //跳过，未测试连接
            CodeView codeView = new CodeView();
            codeView.setVisible(true);
            codeView.setDbInfo(db, jTextField1.getText(),
                    jTextField2.getText());

            setVisible(false);
        }


    }

    //左侧按钮，测试连接
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        //
        jButton1.setText("连接中...");
        jButton1.setEnabled(false);

        final Thread t = new Thread(new Runnable() {
            public void run() {
                try {

                    DatabaseUtil util = new DatabaseUtil();
                    //根据数据库种类设置数据元信息，登录数据库
                    Map<String, String> map = dbMap.get(jComboBox1.getSelectedItem());
                    util.setDriverName(map.get("driverName"));
                    String url = map.get("url").replace("[ip]", jTextField3.getText()).replace("[db]", "");
                    ;

                    util.setUrl(url);

                    util.setUserName(jTextField1.getText());
                    util.setPassWord(jTextField2.getText());
                    //获取所有数据库名 TODO 第一个information_schema可以省略
                    List<String> catalogs = util.getSchemas();
                    jComboBox2.removeAllItems();
                    for (String c : catalogs) {
                        if (!"information_schema".equals(c)) {
                            jComboBox2.addItem(c);
                        }
                    }

                    JOptionPane.showMessageDialog(null, "连接成功", "提示",
                            JOptionPane.DEFAULT_OPTION);
                    jButton2.setText("下一步");
                } catch (ClassNotFoundException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "无法加载驱动类", "提示",
                            JOptionPane.OK_OPTION);

                } catch (SQLException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "无法连接数据库，请核对连接信息是否正确", "提示",
                            JOptionPane.OK_OPTION);

                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "发生错误", "错误详情请查看error.log",
                            JOptionPane.INFORMATION_MESSAGE);

                }

                jButton1.setEnabled(true);
                jButton1.setText("测试连接");

            }
        }
        );
        t.start();


    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DatabaseView().setVisible(true);
            }
        });
    }

}
